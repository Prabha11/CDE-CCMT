2020-05-08 16:05:21.206  INFO 4380 --- [main] com.sliit.spm.AccApplication             : Starting AccApplication on DESKTOP-6IHH9AS with PID 4380 (started by PRABHA in E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACC)
2020-05-08 16:05:21.210  INFO 4380 --- [main] com.sliit.spm.AccApplication             : No active profile set, falling back to default profiles: default
2020-05-08 16:05:31.945  INFO 4380 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2020-05-08 16:05:32.254  INFO 4380 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 280ms. Found 2 repository interfaces.
2020-05-08 16:05:34.759  INFO 4380 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2020-05-08 16:05:34.825  INFO 4380 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-05-08 16:05:34.826  INFO 4380 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.21]
2020-05-08 16:05:34.850  INFO 4380 --- [main] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.16] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.21]
2020-05-08 16:05:34.850  INFO 4380 --- [main] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.16] using APR version [1.6.3].
2020-05-08 16:05:34.850  INFO 4380 --- [main] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-08 16:05:34.850  INFO 4380 --- [main] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-08 16:05:36.095  INFO 4380 --- [main] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2m  2 Nov 2017]
2020-05-08 16:05:37.124  INFO 4380 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-05-08 16:05:37.124  INFO 4380 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 15617 ms
2020-05-08 16:05:38.941  INFO 4380 --- [main] org.mongodb.driver.cluster               : Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-05-08 16:05:40.092  INFO 4380 --- [cluster-ClusterId{value='5eb535fa1b0148111c1fa280', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Exception in monitor thread while connecting to server localhost:27017

com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:67) ~[mongodb-driver-core-3.8.2.jar:na]
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:126) ~[mongodb-driver-core-3.8.2.jar:na]
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:117) ~[mongodb-driver-core-3.8.2.jar:na]
	at java.base/java.lang.Thread.run(Thread.java:835) ~[na:na]
Caused by: java.net.ConnectException: Connection refused: connect
	at java.base/java.net.PlainSocketImpl.waitForConnect(Native Method) ~[na:na]
	at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:107) ~[na:na]
	at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:399) ~[na:na]
	at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:242) ~[na:na]
	at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:224) ~[na:na]
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:403) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:591) ~[na:na]
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:64) ~[mongodb-driver-core-3.8.2.jar:na]
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:62) ~[mongodb-driver-core-3.8.2.jar:na]
	... 3 common frames omitted

2020-05-08 16:05:40.149  INFO 4380 --- [main] org.mongodb.driver.cluster               : Cluster description not yet available. Waiting for 30000 ms before timing out
2020-05-08 16:06:10.220  WARN 4380 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'projectController': Unsatisfied dependency expressed through field 'projectService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'projectServiceImpl': Unsatisfied dependency expressed through field 'projectRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectRepo': Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDataAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
2020-05-08 16:06:10.265  INFO 4380 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-05-08 16:06:10.402  INFO 4380 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-05-08 16:06:10.429 ERROR 4380 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'projectController': Unsatisfied dependency expressed through field 'projectService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'projectServiceImpl': Unsatisfied dependency expressed through field 'projectRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectRepo': Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDataAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:845) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877) ~[spring-context-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549) ~[spring-context-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140) ~[spring-boot-2.1.6.RELEASE.jar:2.1.6.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:742) ~[spring-boot-2.1.6.RELEASE.jar:2.1.6.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:389) ~[spring-boot-2.1.6.RELEASE.jar:2.1.6.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:311) ~[spring-boot-2.1.6.RELEASE.jar:2.1.6.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1213) ~[spring-boot-2.1.6.RELEASE.jar:2.1.6.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1202) ~[spring-boot-2.1.6.RELEASE.jar:2.1.6.RELEASE]
	at com.sliit.spm.AccApplication.main(AccApplication.java:12) ~[classes/:na]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'projectServiceImpl': Unsatisfied dependency expressed through field 'projectRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectRepo': Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDataAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1411) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1251) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectRepo': Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDataAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:314) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1681) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1433) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1251) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDataAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:627) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:303) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	... 45 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	... 55 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:90) ~[spring-data-mongodb-2.1.9.RELEASE.jar:2.1.9.RELEASE]
	at org.springframework.data.mongodb.core.MongoTemplate.potentiallyConvertRuntimeException(MongoTemplate.java:2781) ~[spring-data-mongodb-2.1.9.RELEASE.jar:2.1.9.RELEASE]
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:547) ~[spring-data-mongodb-2.1.9.RELEASE.jar:2.1.9.RELEASE]
	at org.springframework.data.mongodb.core.DefaultIndexOperations.execute(DefaultIndexOperations.java:218) ~[spring-data-mongodb-2.1.9.RELEASE.jar:2.1.9.RELEASE]
	at org.springframework.data.mongodb.core.DefaultIndexOperations.ensureIndex(DefaultIndexOperations.java:121) ~[spring-data-mongodb-2.1.9.RELEASE.jar:2.1.9.RELEASE]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.createIndex(MongoPersistentEntityIndexCreator.java:145) ~[spring-data-mongodb-2.1.9.RELEASE.jar:2.1.9.RELEASE]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForAndCreateIndexes(MongoPersistentEntityIndexCreator.java:135) ~[spring-data-mongodb-2.1.9.RELEASE.jar:2.1.9.RELEASE]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.checkForIndexes(MongoPersistentEntityIndexCreator.java:127) ~[spring-data-mongodb-2.1.9.RELEASE.jar:2.1.9.RELEASE]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.<init>(MongoPersistentEntityIndexCreator.java:93) ~[spring-data-mongodb-2.1.9.RELEASE.jar:2.1.9.RELEASE]
	at org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator.<init>(MongoPersistentEntityIndexCreator.java:70) ~[spring-data-mongodb-2.1.9.RELEASE.jar:2.1.9.RELEASE]
	at org.springframework.data.mongodb.core.MongoTemplate.<init>(MongoTemplate.java:249) ~[spring-data-mongodb-2.1.9.RELEASE.jar:2.1.9.RELEASE]
	at org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration.mongoTemplate(MongoDataAutoConfiguration.java:107) ~[spring-boot-autoconfigure-2.1.6.RELEASE.jar:2.1.6.RELEASE]
	at org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration$$EnhancerBySpringCGLIB$$5c1bf0ba.CGLIB$mongoTemplate$2(<generated>) ~[spring-boot-autoconfigure-2.1.6.RELEASE.jar:2.1.6.RELEASE]
	at org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration$$EnhancerBySpringCGLIB$$5c1bf0ba$$FastClassBySpringCGLIB$$e3a5f86.invoke(<generated>) ~[spring-boot-autoconfigure-2.1.6.RELEASE.jar:2.1.6.RELEASE]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	at org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration$$EnhancerBySpringCGLIB$$5c1bf0ba.mongoTemplate(<generated>) ~[spring-boot-autoconfigure-2.1.6.RELEASE.jar:2.1.6.RELEASE]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:567) ~[na:na]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.1.8.RELEASE.jar:5.1.8.RELEASE]
	... 56 common frames omitted
Caused by: com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: connect}}]
	at com.mongodb.internal.connection.BaseCluster.getDescription(BaseCluster.java:179) ~[mongodb-driver-core-3.8.2.jar:na]
	at com.mongodb.internal.connection.SingleServerCluster.getDescription(SingleServerCluster.java:41) ~[mongodb-driver-core-3.8.2.jar:na]
	at com.mongodb.client.internal.MongoClientDelegate.getConnectedClusterDescription(MongoClientDelegate.java:136) ~[mongodb-driver-3.8.2.jar:na]
	at com.mongodb.client.internal.MongoClientDelegate.createClientSession(MongoClientDelegate.java:94) ~[mongodb-driver-3.8.2.jar:na]
	at com.mongodb.client.internal.MongoClientDelegate$DelegateOperationExecutor.getClientSession(MongoClientDelegate.java:249) ~[mongodb-driver-3.8.2.jar:na]
	at com.mongodb.client.internal.MongoClientDelegate$DelegateOperationExecutor.execute(MongoClientDelegate.java:190) ~[mongodb-driver-3.8.2.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.executeCreateIndexes(MongoCollectionImpl.java:805) ~[mongodb-driver-3.8.2.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.createIndexes(MongoCollectionImpl.java:788) ~[mongodb-driver-3.8.2.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.createIndexes(MongoCollectionImpl.java:783) ~[mongodb-driver-3.8.2.jar:na]
	at com.mongodb.client.internal.MongoCollectionImpl.createIndex(MongoCollectionImpl.java:768) ~[mongodb-driver-3.8.2.jar:na]
	at org.springframework.data.mongodb.core.DefaultIndexOperations.lambda$ensureIndex$0(DefaultIndexOperations.java:135) ~[spring-data-mongodb-2.1.9.RELEASE.jar:2.1.9.RELEASE]
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:545) ~[spring-data-mongodb-2.1.9.RELEASE.jar:2.1.9.RELEASE]
	... 75 common frames omitted

2020-05-08 16:09:52.397  INFO 22796 --- [main] com.sliit.spm.AccApplication             : Starting AccApplication on DESKTOP-6IHH9AS with PID 22796 (started by PRABHA in E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACC)
2020-05-08 16:09:52.403  INFO 22796 --- [main] com.sliit.spm.AccApplication             : No active profile set, falling back to default profiles: default
2020-05-08 16:09:54.264  INFO 22796 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2020-05-08 16:09:54.389  INFO 22796 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 121ms. Found 2 repository interfaces.
2020-05-08 16:09:55.505  INFO 22796 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2020-05-08 16:09:55.530  INFO 22796 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-05-08 16:09:55.530  INFO 22796 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.21]
2020-05-08 16:09:55.538  INFO 22796 --- [main] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.16] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.21]
2020-05-08 16:09:55.538  INFO 22796 --- [main] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.16] using APR version [1.6.3].
2020-05-08 16:09:55.538  INFO 22796 --- [main] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-08 16:09:55.539  INFO 22796 --- [main] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-08 16:09:56.770  INFO 22796 --- [main] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2m  2 Nov 2017]
2020-05-08 16:09:57.430  INFO 22796 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-05-08 16:09:57.430  INFO 22796 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4949 ms
2020-05-08 16:09:59.512  INFO 22796 --- [main] org.mongodb.driver.cluster               : Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-05-08 16:10:00.929  INFO 22796 --- [cluster-ClusterId{value='5eb536ff1b0148590c61e084', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:1, serverValue:2}] to localhost:27017
2020-05-08 16:10:01.066  INFO 22796 --- [cluster-ClusterId{value='5eb536ff1b0148590c61e084', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 3]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=132305606}
2020-05-08 16:10:02.306  INFO 22796 --- [main] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:3}] to localhost:27017
2020-05-08 16:10:21.736  INFO 22796 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-05-08 16:10:22.602  INFO 22796 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2020-05-08 16:10:22.695  INFO 22796 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2020-05-08 16:10:22.706  INFO 22796 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2020-05-08 16:10:23.418  INFO 22796 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8090 (http) with context path ''
2020-05-08 16:10:23.467  INFO 22796 --- [main] com.sliit.spm.AccApplication             : Started AccApplication in 31.57 seconds (JVM running for 33.517)
2020-05-08 16:17:21.346  INFO 22796 --- [http-nio-8090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-08 16:17:21.346  INFO 22796 --- [http-nio-8090-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-05-08 16:17:21.387  INFO 22796 --- [http-nio-8090-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 41 ms
2020-05-08 16:17:21.761  INFO 22796 --- [http-nio-8090-exec-1] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(ResponseEntity com.sliit.spm.controller.ProjectController.saveProject(Project)) with parameters [Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}]
2020-05-08 16:17:21.775  INFO 22796 --- [http-nio-8090-exec-1] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(Project com.sliit.spm.service.impl.ProjectServiceImpl.save(Project)) with parameters [Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}]
2020-05-08 16:17:21.781  INFO 22796 --- [http-nio-8090-exec-1] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(Object org.springframework.data.repository.CrudRepository.save(Object)) with parameters [Analysis{id='null', createdTime=1588934841, projectKey='TestData', project=Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}]
2020-05-08 16:17:22.097  INFO 22796 --- [http-nio-8090-exec-1] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(Object org.springframework.data.repository.CrudRepository.save(Object))
2020-05-08 16:17:22.098  INFO 22796 --- [http-nio-8090-exec-1] com.sliit.spm.aspect.LoggingAspect       : execution(Object org.springframework.data.repository.CrudRepository.save(Object)) returned with value Analysis{id='5eb538b91b0148590c61e085', createdTime=1588934841, projectKey='TestData', project=Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}
2020-05-08 16:17:22.099  INFO 22796 --- [http-nio-8090-exec-1] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(Object org.springframework.data.repository.CrudRepository.save(Object)) with parameters [Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}]
2020-05-08 16:17:22.686  INFO 22796 --- [http-nio-8090-exec-1] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(Object org.springframework.data.repository.CrudRepository.save(Object))
2020-05-08 16:17:22.687  INFO 22796 --- [http-nio-8090-exec-1] com.sliit.spm.aspect.LoggingAspect       : execution(Object org.springframework.data.repository.CrudRepository.save(Object)) returned with value Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}
2020-05-08 16:17:22.687  INFO 22796 --- [http-nio-8090-exec-1] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(Project com.sliit.spm.service.impl.ProjectServiceImpl.save(Project))
2020-05-08 16:17:22.687  INFO 22796 --- [http-nio-8090-exec-1] com.sliit.spm.aspect.LoggingAspect       : execution(Project com.sliit.spm.service.impl.ProjectServiceImpl.save(Project)) returned with value Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}
2020-05-08 16:17:22.688  INFO 22796 --- [http-nio-8090-exec-1] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(ResponseEntity com.sliit.spm.controller.ProjectController.saveProject(Project))
2020-05-08 16:17:22.688  INFO 22796 --- [http-nio-8090-exec-1] com.sliit.spm.aspect.LoggingAspect       : execution(ResponseEntity com.sliit.spm.controller.ProjectController.saveProject(Project)) returned with value <200 OK OK,Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]},[]>
2020-05-08 16:31:53.618  INFO 22796 --- [http-nio-8090-exec-3] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(ResponseEntity com.sliit.spm.controller.ProjectController.saveProject(Project)) with parameters [Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}]
2020-05-08 16:31:53.625  INFO 22796 --- [http-nio-8090-exec-3] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(Project com.sliit.spm.service.impl.ProjectServiceImpl.save(Project)) with parameters [Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}]
2020-05-08 16:31:53.636  INFO 22796 --- [http-nio-8090-exec-3] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(Object org.springframework.data.repository.CrudRepository.save(Object)) with parameters [Analysis{id='null', createdTime=1588935713, projectKey='ACC', project=Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}]
2020-05-08 16:31:53.688  INFO 22796 --- [http-nio-8090-exec-3] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(Object org.springframework.data.repository.CrudRepository.save(Object))
2020-05-08 16:31:53.688  INFO 22796 --- [http-nio-8090-exec-3] com.sliit.spm.aspect.LoggingAspect       : execution(Object org.springframework.data.repository.CrudRepository.save(Object)) returned with value Analysis{id='5eb53c211b0148590c61e086', createdTime=1588935713, projectKey='ACC', project=Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}
2020-05-08 16:31:53.693  INFO 22796 --- [http-nio-8090-exec-3] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(Object org.springframework.data.repository.CrudRepository.save(Object)) with parameters [Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}]
2020-05-08 16:31:53.738  INFO 22796 --- [http-nio-8090-exec-3] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(Object org.springframework.data.repository.CrudRepository.save(Object))
2020-05-08 16:31:53.738  INFO 22796 --- [http-nio-8090-exec-3] com.sliit.spm.aspect.LoggingAspect       : execution(Object org.springframework.data.repository.CrudRepository.save(Object)) returned with value Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}
2020-05-08 16:31:53.742  INFO 22796 --- [http-nio-8090-exec-3] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(Project com.sliit.spm.service.impl.ProjectServiceImpl.save(Project))
2020-05-08 16:31:53.742  INFO 22796 --- [http-nio-8090-exec-3] com.sliit.spm.aspect.LoggingAspect       : execution(Project com.sliit.spm.service.impl.ProjectServiceImpl.save(Project)) returned with value Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}
2020-05-08 16:31:53.746  INFO 22796 --- [http-nio-8090-exec-3] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(ResponseEntity com.sliit.spm.controller.ProjectController.saveProject(Project))
2020-05-08 16:31:53.746  INFO 22796 --- [http-nio-8090-exec-3] com.sliit.spm.aspect.LoggingAspect       : execution(ResponseEntity com.sliit.spm.controller.ProjectController.saveProject(Project)) returned with value <200 OK OK,Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]},[]>
2020-05-08 16:32:40.797  INFO 22796 --- [http-nio-8090-exec-5] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjects()) with parameters []
2020-05-08 16:32:40.798  INFO 22796 --- [http-nio-8090-exec-5] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getAll()) with parameters []
2020-05-08 16:32:42.479  INFO 22796 --- [http-nio-8090-exec-5] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getAll())
2020-05-08 16:32:42.479  INFO 22796 --- [http-nio-8090-exec-5] com.sliit.spm.aspect.LoggingAspect       : execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getAll()) returned with value [Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}, Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}]
2020-05-08 16:32:42.485  INFO 22796 --- [http-nio-8090-exec-5] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjects())
2020-05-08 16:32:42.486  INFO 22796 --- [http-nio-8090-exec-5] com.sliit.spm.aspect.LoggingAspect       : execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjects()) returned with value <200 OK OK,[Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}, Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}],[]>
2020-05-08 16:32:42.903  INFO 22796 --- [http-nio-8090-exec-6] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String)) with parameters [TestData]
2020-05-08 16:32:42.903  INFO 22796 --- [http-nio-8090-exec-6] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String)) with parameters [TestData]
2020-05-08 16:32:42.970  INFO 22796 --- [http-nio-8090-exec-7] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String)) with parameters [ACC]
2020-05-08 16:32:42.971  INFO 22796 --- [http-nio-8090-exec-7] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String)) with parameters [ACC]
2020-05-08 16:32:43.077  INFO 22796 --- [http-nio-8090-exec-6] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String))
2020-05-08 16:32:43.078  INFO 22796 --- [http-nio-8090-exec-6] com.sliit.spm.aspect.LoggingAspect       : execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String)) returned with value [Analysis{id='5eb538b91b0148590c61e085', createdTime=1588934841, projectKey='TestData', project=Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}]
2020-05-08 16:32:43.078  INFO 22796 --- [http-nio-8090-exec-6] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String))
2020-05-08 16:32:43.078  INFO 22796 --- [http-nio-8090-exec-6] com.sliit.spm.aspect.LoggingAspect       : execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String)) returned with value <200 OK OK,[Analysis{id='5eb538b91b0148590c61e085', createdTime=1588934841, projectKey='TestData', project=Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}],[]>
2020-05-08 16:32:43.085  INFO 22796 --- [http-nio-8090-exec-7] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String))
2020-05-08 16:32:43.085  INFO 22796 --- [http-nio-8090-exec-7] com.sliit.spm.aspect.LoggingAspect       : execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String)) returned with value [Analysis{id='5eb53c211b0148590c61e086', createdTime=1588935713, projectKey='ACC', project=Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}]
2020-05-08 16:32:43.099  INFO 22796 --- [http-nio-8090-exec-7] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String))
2020-05-08 16:32:43.100  INFO 22796 --- [http-nio-8090-exec-7] com.sliit.spm.aspect.LoggingAspect       : execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String)) returned with value <200 OK OK,[Analysis{id='5eb53c211b0148590c61e086', createdTime=1588935713, projectKey='ACC', project=Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}],[]>
2020-05-08 16:43:53.350  INFO 22796 --- [http-nio-8090-exec-10] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjects()) with parameters []
2020-05-08 16:43:53.351  INFO 22796 --- [http-nio-8090-exec-10] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getAll()) with parameters []
2020-05-08 16:43:53.406  INFO 22796 --- [http-nio-8090-exec-10] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getAll())
2020-05-08 16:43:53.406  INFO 22796 --- [http-nio-8090-exec-10] com.sliit.spm.aspect.LoggingAspect       : execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getAll()) returned with value [Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}, Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}]
2020-05-08 16:43:53.417  INFO 22796 --- [http-nio-8090-exec-10] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjects())
2020-05-08 16:43:53.418  INFO 22796 --- [http-nio-8090-exec-10] com.sliit.spm.aspect.LoggingAspect       : execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjects()) returned with value <200 OK OK,[Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}, Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}],[]>
2020-05-08 16:43:53.715  INFO 22796 --- [http-nio-8090-exec-1] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String)) with parameters [TestData]
2020-05-08 16:43:53.716  INFO 22796 --- [http-nio-8090-exec-1] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String)) with parameters [TestData]
2020-05-08 16:43:53.764  INFO 22796 --- [http-nio-8090-exec-1] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String))
2020-05-08 16:43:53.765  INFO 22796 --- [http-nio-8090-exec-1] com.sliit.spm.aspect.LoggingAspect       : execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String)) returned with value [Analysis{id='5eb538b91b0148590c61e085', createdTime=1588934841, projectKey='TestData', project=Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}]
2020-05-08 16:43:53.765  INFO 22796 --- [http-nio-8090-exec-1] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String))
2020-05-08 16:43:53.766  INFO 22796 --- [http-nio-8090-exec-1] com.sliit.spm.aspect.LoggingAspect       : execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String)) returned with value <200 OK OK,[Analysis{id='5eb538b91b0148590c61e085', createdTime=1588934841, projectKey='TestData', project=Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}],[]>
2020-05-08 16:43:53.781  INFO 22796 --- [http-nio-8090-exec-2] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String)) with parameters [ACC]
2020-05-08 16:43:53.782  INFO 22796 --- [http-nio-8090-exec-2] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String)) with parameters [ACC]
2020-05-08 16:43:53.832  INFO 22796 --- [http-nio-8090-exec-2] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String))
2020-05-08 16:43:53.832  INFO 22796 --- [http-nio-8090-exec-2] com.sliit.spm.aspect.LoggingAspect       : execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String)) returned with value [Analysis{id='5eb53c211b0148590c61e086', createdTime=1588935713, projectKey='ACC', project=Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}]
2020-05-08 16:43:53.841  INFO 22796 --- [http-nio-8090-exec-2] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String))
2020-05-08 16:43:53.842  INFO 22796 --- [http-nio-8090-exec-2] com.sliit.spm.aspect.LoggingAspect       : execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String)) returned with value <200 OK OK,[Analysis{id='5eb53c211b0148590c61e086', createdTime=1588935713, projectKey='ACC', project=Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}],[]>
2020-05-08 16:43:59.660  INFO 22796 --- [http-nio-8090-exec-3] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjects()) with parameters []
2020-05-08 16:43:59.660  INFO 22796 --- [http-nio-8090-exec-3] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getAll()) with parameters []
2020-05-08 16:43:59.702  INFO 22796 --- [http-nio-8090-exec-3] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getAll())
2020-05-08 16:43:59.702  INFO 22796 --- [http-nio-8090-exec-3] com.sliit.spm.aspect.LoggingAspect       : execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getAll()) returned with value [Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}, Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}]
2020-05-08 16:43:59.710  INFO 22796 --- [http-nio-8090-exec-3] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjects())
2020-05-08 16:43:59.710  INFO 22796 --- [http-nio-8090-exec-3] com.sliit.spm.aspect.LoggingAspect       : execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjects()) returned with value <200 OK OK,[Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}, Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}],[]>
2020-05-08 16:43:59.930  INFO 22796 --- [http-nio-8090-exec-4] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String)) with parameters [TestData]
2020-05-08 16:43:59.931  INFO 22796 --- [http-nio-8090-exec-4] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String)) with parameters [TestData]
2020-05-08 16:43:59.931  INFO 22796 --- [http-nio-8090-exec-5] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String)) with parameters [ACC]
2020-05-08 16:43:59.931  INFO 22796 --- [http-nio-8090-exec-5] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String)) with parameters [ACC]
2020-05-08 16:43:59.978  INFO 22796 --- [http-nio-8090-exec-4] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String))
2020-05-08 16:43:59.978  INFO 22796 --- [http-nio-8090-exec-4] com.sliit.spm.aspect.LoggingAspect       : execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String)) returned with value [Analysis{id='5eb538b91b0148590c61e085', createdTime=1588934841, projectKey='TestData', project=Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}]
2020-05-08 16:43:59.978  INFO 22796 --- [http-nio-8090-exec-4] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String))
2020-05-08 16:43:59.978  INFO 22796 --- [http-nio-8090-exec-4] com.sliit.spm.aspect.LoggingAspect       : execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String)) returned with value <200 OK OK,[Analysis{id='5eb538b91b0148590c61e085', createdTime=1588934841, projectKey='TestData', project=Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}],[]>
2020-05-08 16:44:00.098  INFO 22796 --- [http-nio-8090-exec-5] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:3, serverValue:4}] to localhost:27017
2020-05-08 16:44:00.142  INFO 22796 --- [http-nio-8090-exec-5] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String))
2020-05-08 16:44:00.143  INFO 22796 --- [http-nio-8090-exec-5] com.sliit.spm.aspect.LoggingAspect       : execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String)) returned with value [Analysis{id='5eb53c211b0148590c61e086', createdTime=1588935713, projectKey='ACC', project=Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}]
2020-05-08 16:44:00.150  INFO 22796 --- [http-nio-8090-exec-5] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String))
2020-05-08 16:44:00.150  INFO 22796 --- [http-nio-8090-exec-5] com.sliit.spm.aspect.LoggingAspect       : execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String)) returned with value <200 OK OK,[Analysis{id='5eb53c211b0148590c61e086', createdTime=1588935713, projectKey='ACC', project=Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}],[]>
2020-05-08 17:21:38.274  INFO 22796 --- [http-nio-8090-exec-8] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjects()) with parameters []
2020-05-08 17:21:38.308  INFO 22796 --- [http-nio-8090-exec-8] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getAll()) with parameters []
2020-05-08 17:21:38.439  INFO 22796 --- [http-nio-8090-exec-8] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getAll())
2020-05-08 17:21:38.439  INFO 22796 --- [http-nio-8090-exec-8] com.sliit.spm.aspect.LoggingAspect       : execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getAll()) returned with value [Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}, Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}]
2020-05-08 17:21:38.446  INFO 22796 --- [http-nio-8090-exec-8] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjects())
2020-05-08 17:21:38.446  INFO 22796 --- [http-nio-8090-exec-8] com.sliit.spm.aspect.LoggingAspect       : execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjects()) returned with value <200 OK OK,[Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}, Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}],[]>
2020-05-08 17:21:39.105  INFO 22796 --- [http-nio-8090-exec-9] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String)) with parameters [TestData]
2020-05-08 17:21:39.105  INFO 22796 --- [http-nio-8090-exec-9] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String)) with parameters [TestData]
2020-05-08 17:21:39.129  INFO 22796 --- [http-nio-8090-exec-9] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String))
2020-05-08 17:21:39.129  INFO 22796 --- [http-nio-8090-exec-9] com.sliit.spm.aspect.LoggingAspect       : execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String)) returned with value [Analysis{id='5eb538b91b0148590c61e085', createdTime=1588934841, projectKey='TestData', project=Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}]
2020-05-08 17:21:39.130  INFO 22796 --- [http-nio-8090-exec-9] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String))
2020-05-08 17:21:39.130  INFO 22796 --- [http-nio-8090-exec-9] com.sliit.spm.aspect.LoggingAspect       : execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String)) returned with value <200 OK OK,[Analysis{id='5eb538b91b0148590c61e085', createdTime=1588934841, projectKey='TestData', project=Project{projectKey='TestData', sourcePath='TestData', language='Java', files=[ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner\\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}],[]>
2020-05-08 17:21:39.130  INFO 22796 --- [http-nio-8090-exec-10] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String)) with parameters [ACC]
2020-05-08 17:21:39.131  INFO 22796 --- [http-nio-8090-exec-10] com.sliit.spm.aspect.LoggingAspect       : begin executing execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String)) with parameters [ACC]
2020-05-08 17:21:39.154  INFO 22796 --- [http-nio-8090-exec-10] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String))
2020-05-08 17:21:39.154  INFO 22796 --- [http-nio-8090-exec-10] com.sliit.spm.aspect.LoggingAspect       : execution(List com.sliit.spm.service.impl.ProjectServiceImpl.getHistoryByKey(String)) returned with value [Analysis{id='5eb53c211b0148590c61e086', createdTime=1588935713, projectKey='ACC', project=Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}]
2020-05-08 17:21:39.159  INFO 22796 --- [http-nio-8090-exec-10] com.sliit.spm.aspect.LoggingAspect       : after execution of execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String))
2020-05-08 17:21:39.160  INFO 22796 --- [http-nio-8090-exec-10] com.sliit.spm.aspect.LoggingAspect       : execution(ResponseEntity com.sliit.spm.controller.ProjectController.getProjectHistory(String)) returned with value <200 OK OK,[Analysis{id='5eb53c211b0148590c61e086', createdTime=1588935713, projectKey='ACC', project=Project{projectKey='ACC', sourcePath='E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACCScanner', language='Java', files=[ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ci.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 29, 2019}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ci {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=    private static final List<String> keywords = Arrays.asList("extends ", "implements ", ",", ":");}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    private static final List<String> excludedKeywords = Arrays.asList("else ", "class ");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=3, cps=15, tw=3, cr=0, data=    private static int ci = 0;}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=3, cps=6, tw=3, cr=0, data=    private Ci() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will add ci value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=    public static void calcCi(Line lineObj, String line, String lang) {}, Line{lineNo=33, cs=7, ctc=0, cnc=0, ci=3, cps=21, tw=3, cr=0, data=        line = line.trim();}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         * find if line contains extends or implements keywords}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=37, cs=12, ctc=2, cnc=0, ci=0, cps=24, tw=2, cr=0, data=        if (!line.isEmpty() && line.contains("class ")) {}, Line{lineNo=38, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            ci = "java".equalsIgnoreCase(lang) ? 2 : 1;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=40, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=        for (String keyword : keywords) {}, Line{lineNo=41, cs=22, ctc=3, cnc=1, ci=0, cps=88, tw=4, cr=0, data=            if (!line.isEmpty() && line.indexOf(keyword) != -1 && line.contains("class ")) {}, Line{lineNo=42, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                ci += StringUtils.countMatches(line, keyword);}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=24, ctc=0, cnc=0, ci=2, cps=48, tw=2, cr=0, data=        lineObj.setCi((ci != 0 && !line.isEmpty() && !isExcludedListValue(line)) ? ci : 0);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * This method will reset static ci value}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetCi() {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        Ci.ci = 0;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static boolean isExcludedListValue(String line) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            line = line.trim();}, Line{lineNo=58, cs=6, ctc=1, cnc=0, ci=2, cps=18, tw=3, cr=0, data=            if ("}".equals(line)) {}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                return true;}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=62, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=            for (String item : excludedKeywords) {}, Line{lineNo=63, cs=5, ctc=1, cnc=2, ci=2, cps=25, tw=5, cr=0, data=                if (line.contains(item)) {}, Line{lineNo=64, cs=0, ctc=0, cnc=2, ci=2, cps=0, tw=4, cr=0, data=                    return true;}, Line{lineNo=65, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=68, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            return false;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return false;}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=402}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cnc.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cnc {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Cnc.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w*\\s*=?\\s*[a-zA-Z0-9]*;+\\s*)(\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!][=]*\\s*[a-zA-Z0-9]+))*(;\\s*[a-zA-Z]+\\+\\+)(\\)\\s*\\{)");}, Line{lineNo=16, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern whilePattern = Pattern.compile("(while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=17, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern doWhileTopPattern = Pattern.compile("(do\\s*\\{)");}, Line{lineNo=18, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static Pattern doWhileBottomPattern = Pattern.compile("(\\}\\s*while\\s*\\()(\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\;)");}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern forEachPattern = Pattern.compile("(for\\s*\\()([a-zA-Z]*\\s*\\w+\\s*:\\s*\\w+)(\\)\\s*\\{)");}, Line{lineNo=20, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern ifPattern = Pattern.compile("(\\w*\\s*if\\s*\\()(\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*)((\\s*\\&\\&|\\s*\\|\\||\\s*\\&|\\s*\\|)(\\s*\\(*\\w+\\s*[><=!]*[=]*\\s*[a-zA-Z0-9]*\\)*))*(\\.\\w+\\(\\\"*\\w*\\\"*\\))*(\\)\\s*\\{)");}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern switchPattern = Pattern.compile("(switch\\s*\\()(\\w+)(\\)\\s*\\{)");}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern elsePattern = Pattern.compile("(\\}*\\s*else\\s*\\{)");}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static void calcCnc(Line lineObj, String line) {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        int cnc = 0;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //int ctc = 0;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        line = line.trim();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forMatcher = forPattern.matcher(line);}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forMatcher.matches() && line.startsWith(forMatcher.group(1))) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=37, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forWords = Arrays.asList(line.replaceAll("[\\(\\+\\=\\)\\;\\>\\<\\!]", " ").split(" "));}, Line{lineNo=38, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forChar : forWords) {}, Line{lineNo=39, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forChar.equals("&&") || forChar.equals("&") || forChar.equals("||") || forChar.equals("|")) {}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=42, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forChar.equals("{")) {}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=48, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher whileMatcher = whilePattern.matcher(line);}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (whileMatcher.matches() && line.startsWith(whileMatcher.group(1))) {}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=52, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> whileWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=53, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String whileChar : whileWords) {}, Line{lineNo=54, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (whileChar.equals("&&") || whileChar.equals("&") || whileChar.equals("||") || whileChar.equals("|")) {}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=57, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (whileChar.equals("{")) {}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileTopMatcher = doWhileTopPattern.matcher(line);}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileTopMatcher.matches() && line.startsWith(doWhileTopMatcher.group(1))) {}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=67, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                List<String> doWhileTopWords = Arrays.asList(line.split(" "));}, Line{lineNo=68, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileTopChar : doWhileTopWords) {}, Line{lineNo=69, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (doWhileTopChar.equals("{") || doWhileTopChar.contains("{")) {}, Line{lineNo=70, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=72, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            Matcher elseMatcher = elsePattern.matcher(line);}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=77, cs=13, ctc=2, cnc=0, ci=2, cps=52, tw=4, cr=0, data=            if (elseMatcher.matches() && line.startsWith(elseMatcher.group(1))) {}, Line{lineNo=78, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=                List<String> elseWords = Arrays.asList(line.split(" "));}, Line{lineNo=79, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=                for (String elseChar : elseWords) {}, Line{lineNo=80, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=0, data=                    if (elseChar.equals("{") || elseChar.contains("{")) {}, Line{lineNo=81, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=86, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=            Matcher doWhileBottomMatcher = doWhileBottomPattern.matcher(line);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=17, ctc=2, cnc=0, ci=2, cps=68, tw=4, cr=0, data=            if (doWhileBottomMatcher.matches() && line.startsWith(doWhileBottomMatcher.group(1))) {}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=90, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> doWhileBottomWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"\\;]", " ").split(" "));}, Line{lineNo=91, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (String doWhileBottomChar : doWhileBottomWords) {}, Line{lineNo=92, cs=24, ctc=4, cnc=1, ci=2, cps=168, tw=7, cr=0, data=                    if (doWhileBottomChar.equals("&&") || doWhileBottomChar.equals("&") || doWhileBottomChar.equals("||") || doWhileBottomChar.equals("|")) {}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=98, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher forEachMatcher = forEachPattern.matcher(line);}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (forEachMatcher.matches() && line.startsWith(forEachMatcher.group(1))) {}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 2;}, Line{lineNo=102, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> forEachWords = Arrays.asList(line.replaceAll("[\\(\\)\\:]", " ").split(" "));}, Line{lineNo=103, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String forEachChar : forEachWords) {}, Line{lineNo=104, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (forEachChar.equals("&&") || forEachChar.equals("&") || forEachChar.equals("||") || forEachChar.equals("|")) {}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 2;}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=107, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (forEachChar.equals("{")) {}, Line{lineNo=108, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=111, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=113, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher ifMatcher = ifPattern.matcher(line);}, Line{lineNo=114, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=115, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (ifMatcher.matches() && line.startsWith(ifMatcher.group(1))) {}, Line{lineNo=116, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //ctc = ctc + 1;}, Line{lineNo=117, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=                List<String> ifWords = Arrays.asList(line.replaceAll("[\\(\\.\\=\\)\\>\\<\\!\\\"]", " ").split(" "));}, Line{lineNo=118, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String ifChar : ifWords) {}, Line{lineNo=119, cs=20, ctc=4, cnc=1, ci=2, cps=140, tw=7, cr=0, data=                    if (ifChar.equals("&&") || ifChar.equals("&") || ifChar.equals("||") || ifChar.equals("|")) {}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        //ctc = ctc + 1;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (ifChar.equals("{")) {}, Line{lineNo=123, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=126, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=127, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=128, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Matcher switchMatcher = switchPattern.matcher(line);}, Line{lineNo=129, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=130, cs=15, ctc=2, cnc=0, ci=2, cps=60, tw=4, cr=0, data=            if (switchMatcher.matches() && line.startsWith(switchMatcher.group(1))) {}, Line{lineNo=131, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                List<String> switchWords = Arrays.asList(line.replaceAll("[\\(\\)]", " ").split(" "));}, Line{lineNo=132, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                for (String switchChar : switchWords) {}, Line{lineNo=133, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                    if (switchChar.equals("{")) {}, Line{lineNo=134, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        FileHandler.stack.push("{");}, Line{lineNo=135, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=136, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=138, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=139, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=140, cs=21, ctc=3, cnc=0, ci=2, cps=105, tw=5, cr=0, data=            if (FileHandler.stack.peek() != 0 && (line.startsWith("}") || line.endsWith("}"))) {}, Line{lineNo=141, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                String val = FileHandler.stack.pop();}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=143, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=144, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            cnc = cnc + FileHandler.stack.peek();}, Line{lineNo=145, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            lineObj.setCnc(cnc);}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //System.out.println(cnc);}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=148, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (Exception e) {}, Line{lineNo=149, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            String errMsg = "Error calculating Cnc";}, Line{lineNo=150, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(errMsg);}, Line{lineNo=151, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=152, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=153, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=2294}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cr.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=class Cr {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    static void calcCr(Line lineObj, HashMap<Integer, Integer> recursiveLines) {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calc cps}, Line{lineNo=14, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        calcCPS(lineObj);}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        // Iterates through the hashmap of line numbers}, Line{lineNo=17, cs=9, ctc=2, cnc=0, ci=2, cps=36, tw=4, cr=0, data=        for (Map.Entry<Integer, Integer> pair : recursiveLines.entrySet()) {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            //Checks if the line number of  the code segment is within the recursive method}, Line{lineNo=20, cs=34, ctc=2, cnc=0, ci=2, cps=136, tw=4, cr=0, data=            if (lineObj.getLineNo() >= Integer.parseInt(((Map.Entry) pair).getKey().toString()) && lineObj.getLineNo() <= Integer.parseInt(((Map.Entry) pair).getValue().toString())) {}, Line{lineNo=21, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                int lineCRValue = (lineObj.getCps() * 2);}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                lineObj.setCr(lineCRValue);}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static void calcCPS(Line lineObj) {}, Line{lineNo=28, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=        int tw = lineObj.getCtc() + lineObj.getCnc() + lineObj.getCi();}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        lineObj.setTw(tw);}, Line{lineNo=30, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        lineObj.setCps(lineObj.getCs() * tw);}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=280}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Cs.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.PropertyReader;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * calculate Cs of a line}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Cs {}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=   private static final Logger LOGGER = Logger.getLogger(Cs.class);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=   private static Pattern numeric = Pattern.compile("\\d+");}, Line{lineNo=22, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=   private static Pattern textInsideDoubleQuoted = Pattern.compile("\"(.*?)\"");}, Line{lineNo=23, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=24, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwo = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two").split(","));}, Line{lineNo=25, cs=15, ctc=0, cnc=0, ci=2, cps=30, tw=2, cr=0, data=   private static List<String> keywordsTwoStartWith = Arrays.asList(PropertyReader.getInstance().getProperty("cs.two.start.with").split(","));}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   private Cs() {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=   public static void calcCs(Line lineObj, String line, List<String> methodsAndVariables) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      int cs = 0;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=      line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=      try {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find Text inside a pair of double quotes}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=39, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=         Matcher q = textInsideDoubleQuoted.matcher(line);}, Line{lineNo=40, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (q.find()) {}, Line{lineNo=41, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=            line = line.replace(q.group(0), "");}, Line{lineNo=42, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 1}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=48, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsOne) {}, Line{lineNo=49, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=50, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=51, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=58, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwo) {}, Line{lineNo=59, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(keyword) != -1) {}, Line{lineNo=60, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=               int score = StringUtils.countMatches(line.toLowerCase(), keyword);}, Line{lineNo=61, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=               score *= 2;}, Line{lineNo=62, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=               cs += score;}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        count of occurrences with score of 2 and check if the string starts with the given keyword}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=69, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=         for (String keyword : keywordsTwoStartWith) {}, Line{lineNo=70, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=            if (!line.isEmpty()) {}, Line{lineNo=71, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=               List<String> words = Arrays.asList(line.split(" "));}, Line{lineNo=72, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String word : words) {}, Line{lineNo=73, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (word.startsWith(keyword)) {}, Line{lineNo=74, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs += 2;}, Line{lineNo=75, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=76, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=79, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find numeric values}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=83, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         Matcher n = numeric.matcher(line);}, Line{lineNo=84, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=         while (n.find()) {}, Line{lineNo=85, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            cs++;}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        /*}, Line{lineNo=89, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        find methods and variables}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         */}, Line{lineNo=91, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String keyword : methodsAndVariables) {}, Line{lineNo=92, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=            List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.\\{\\}\\=]", " ").split(" "));}, Line{lineNo=93, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=            for (String lineData : lineDataList) {}, Line{lineNo=94, cs=7, ctc=1, cnc=2, ci=2, cps=35, tw=5, cr=0, data=               if (lineData.equalsIgnoreCase(keyword.toLowerCase())) {}, Line{lineNo=95, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                  cs += 1;}, Line{lineNo=96, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         // temp solution for bug}, Line{lineNo=101, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=         List<String> remove = new ArrayList<>();}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("print");}, Line{lineNo=103, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=         remove.add("println");}, Line{lineNo=104, cs=3, ctc=2, cnc=1, ci=2, cps=15, tw=5, cr=0, data=         for (String val : remove) {}, Line{lineNo=105, cs=17, ctc=2, cnc=1, ci=2, cps=85, tw=5, cr=0, data=            if (!line.isEmpty() && line.toLowerCase().indexOf(val) != -1) {}, Line{lineNo=106, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=               List<String> lineDataList = Arrays.asList(line.replaceAll("[\\(\\+\\-\\)\\:\\;\\[\\]\\.]", " ").split(" "));}, Line{lineNo=107, cs=3, ctc=2, cnc=2, ci=2, cps=18, tw=6, cr=0, data=               for (String lineData : lineDataList) {}, Line{lineNo=108, cs=3, ctc=1, cnc=3, ci=2, cps=18, tw=6, cr=0, data=                  if (lineData.equals(val)) {}, Line{lineNo=109, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                     cs -= 1;}, Line{lineNo=110, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                  }}, Line{lineNo=111, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=               }}, Line{lineNo=112, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=113, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=         }}, Line{lineNo=114, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=         lineObj.setCs(cs);}, Line{lineNo=115, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=      } catch (Exception e) {}, Line{lineNo=116, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=         String errMsg = "Error calculating Cs";}, Line{lineNo=117, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=         LOGGER.error(errMsg);}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=      }}, Line{lineNo=119, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=120, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1121}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\Ctc.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.lang3.StringUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Jul 30, 2019}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=18, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Ctc {}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=10, ctc=4, cnc=0, ci=2, cps=60, tw=6, cr=0, data=	private static final List<String> ccsKeywords = Arrays.asList("if(", "catch(", "if (", "catch (");}, Line{lineNo=21, cs=10, ctc=8, cnc=0, ci=2, cps=100, tw=10, cr=0, data=	private static final List<String> icsKeywords = Arrays.asList("for(", "while(", "for (", "while (");}, Line{lineNo=22, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=	private static final List<String> bitwiseKeywords = Arrays.asList(" && ", " || ", " & ", " | ");}, Line{lineNo=23, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static Line switchLine = null;}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	static int switchCtc = 0;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will add ctc value of a line to lineObj}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * }, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param lineObj}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * @param line}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=32, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=	public static void calcCtc(Line lineObj, String line) {}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		int ctc = 0;}, Line{lineNo=34, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=		line = line.trim();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : ccsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=37, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=38, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword); // Increment ctc by 1}, Line{lineNo=39, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=40, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw);}, Line{lineNo=41, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=44, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=		for (String keyword : icsKeywords) { // check if line contains any ccskeywords}, Line{lineNo=45, cs=14, ctc=2, cnc=1, ci=2, cps=70, tw=5, cr=0, data=			if (!line.isEmpty() && line.indexOf(keyword) != -1) {}, Line{lineNo=46, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=0, data=				ctc += StringUtils.countMatches(line, keyword) * 2; // Increment ctc by 2}, Line{lineNo=47, cs=2, ctc=2, cnc=2, ci=2, cps=12, tw=6, cr=0, data=				for (String bw : bitwiseKeywords) {}, Line{lineNo=48, cs=9, ctc=0, cnc=2, ci=2, cps=36, tw=4, cr=0, data=					ctc += StringUtils.countMatches(line, bw) * 2;}, Line{lineNo=49, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=				}}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=			}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=52, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=		if (!line.isEmpty() && line.contains("switch")) { // Maintaining a static value, because need to use lines after}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=															// switch}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			setSwitchCtc();}, Line{lineNo=55, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=			switchLine = lineObj;}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=57, cs=6, ctc=1, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		switchCtc += StringUtils.countMatches(line, "case");}, Line{lineNo=58, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		lineObj.setCtc(ctc);}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=60, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	/**}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 * This method will set switch ctc value and will reset switch ctc value}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	 */}, Line{lineNo=64, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public static void setSwitchCtc() {}, Line{lineNo=65, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=		if (Objects.nonNull(switchLine) && switchCtc > 0) { // if file contains a switch, increment ctc value.}, Line{lineNo=66, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=			switchLine.setCtc(switchCtc);}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=		}}, Line{lineNo=68, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		switchLine = null;}, Line{lineNo=69, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		switchCtc = 0;}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=656}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\acc\FileHandler.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.ProjectFile;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Stack;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.Client;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.MethodAndVariableFinder;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.RecursiveMethodLineNumberFinder;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.commons.io.FilenameUtils;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Objects;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandler {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(FileHandler.class);}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static Stack stack;}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private Project project;}, Line{lineNo=28, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private String projectRoot = "";}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private List<File> fileList = new ArrayList<>();}, Line{lineNo=30, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private List<ProjectFile> projectFiles = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void readFiles(Project p) {}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project = p;}, Line{lineNo=34, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        this.projectRoot = project.getSourcePath();}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        getFiles(projectRoot);}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        calculateComplexity();}, Line{lineNo=38, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        this.project.setFiles(projectFiles);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //calculate project cp}, Line{lineNo=41, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        int projectCp = 0;}, Line{lineNo=42, cs=2, ctc=2, cnc=1, ci=2, cps=10, tw=5, cr=0, data=        for (ProjectFile pf : projectFiles) {}, Line{lineNo=43, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            projectCp += pf.getCp();}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=45, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        project.setCp(projectCp);}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        Client.sendAnalysisData(project);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void getFiles(String projectPath) {}, Line{lineNo=52, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File dir = new File(projectPath);}, Line{lineNo=53, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        File[] directoryListing = dir.listFiles();}, Line{lineNo=54, cs=4, ctc=1, cnc=1, ci=2, cps=16, tw=4, cr=0, data=        if (Objects.nonNull(directoryListing)) {}, Line{lineNo=55, cs=4, ctc=2, cnc=2, ci=2, cps=24, tw=6, cr=0, data=            for (File file : directoryListing) {}, Line{lineNo=56, cs=4, ctc=1, cnc=3, ci=2, cps=24, tw=6, cr=0, data=                if (file.isDirectory()) {}, Line{lineNo=57, cs=4, ctc=0, cnc=3, ci=2, cps=20, tw=5, cr=0, data=                    getFiles(file.getPath());}, Line{lineNo=58, cs=0, ctc=0, cnc=2, ci=0, cps=0, tw=2, cr=0, data=                }}, Line{lineNo=59, cs=10, ctc=1, cnc=2, ci=2, cps=50, tw=5, cr=0, data=                if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("java")) {}, Line{lineNo=60, cs=4, ctc=0, cnc=2, ci=2, cps=16, tw=4, cr=0, data=                    fileList.add(file);}, Line{lineNo=61, cs=5, ctc=0, cnc=2, ci=2, cps=20, tw=4, cr=0, data=                    project.setLanguage("Java");}, Line{lineNo=62, cs=10, ctc=1, cnc=1, ci=0, cps=20, tw=2, cr=0, data=                } else if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("cpp")) {}, Line{lineNo=63, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                    fileList.add(file);}, Line{lineNo=64, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                    project.setLanguage("C++");}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private void calculateComplexity() {}, Line{lineNo=71, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        LOGGER.info("Found " + fileList.size() + " Files in source path");}, Line{lineNo=72, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        fileList.forEach(file -> {}, Line{lineNo=73, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            ProjectFile projectFile = new ProjectFile();}, Line{lineNo=74, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            stack = new Stack();}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=76, cs=11, ctc=0, cnc=0, ci=2, cps=22, tw=2, cr=0, data=            try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=78, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=                LOGGER.debug("Analyzing file " + file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=79, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                projectFile.setRelativePath(file.getCanonicalPath().replace(projectRoot, ""));}, Line{lineNo=80, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<Line> lines = new ArrayList<>();}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                boolean singleLineCommented;}, Line{lineNo=82, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                boolean multiLineCommented = false;}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // helper for Cs calculation}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                List<String> methodsAndVariables = MethodAndVariableFinder.getMethodAndVariables(file);}, Line{lineNo=86, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                HashMap<Integer, Integer> recursiveLineNumbers = RecursiveMethodLineNumberFinder.getRecursiveMethodLineNumbers(file);}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=88, cs=12, ctc=2, cnc=0, ci=2, cps=48, tw=4, cr=0, data=                for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=89, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Line lineObj = new Line();}, Line{lineNo=90, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                    lineObj.setLineNo(lnr.getLineNumber());}, Line{lineNo=91, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                    lineObj.setData(line);}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // ignore comment lines}, Line{lineNo=94, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=95, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = true;}, Line{lineNo=96, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    } else {}, Line{lineNo=97, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        singleLineCommented = false;}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=99, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("/*")) {}, Line{lineNo=100, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = true;}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=102, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().startsWith("*/")) {}, Line{lineNo=103, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=                        line = line.replaceFirst("\\*/", "");}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=106, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                    if (line.contains("//")) {}, Line{lineNo=107, cs=16, ctc=0, cnc=0, ci=2, cps=32, tw=2, cr=0, data=                        line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=108, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=109, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=110, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //calculate complexity if line is not commented}, Line{lineNo=111, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                    if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=112, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cs.calcCs(lineObj, line, methodsAndVariables);}, Line{lineNo=113, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                        Ci.calcCi(lineObj, line, project.getLanguage());}, Line{lineNo=114, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Ctc.calcCtc(lineObj, line);}, Line{lineNo=115, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                        Cnc.calcCnc(lineObj, line);}, Line{lineNo=116, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                        Cr.calcCr(lineObj, recursiveLineNumbers);}, Line{lineNo=117, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=118, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=119, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                    if (line.trim().endsWith("*/")) {}, Line{lineNo=120, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                        multiLineCommented = false;}, Line{lineNo=121, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=122, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=123, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                    lines.add(lineObj);}, Line{lineNo=124, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=125, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=126, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                int fileCp = 0;}, Line{lineNo=127, cs=6, ctc=2, cnc=1, ci=2, cps=30, tw=5, cr=0, data=                for (Line line : lines) {}, Line{lineNo=128, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                    if (line.getCr() != 0) {}, Line{lineNo=129, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCr();}, Line{lineNo=130, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                    } else {}, Line{lineNo=131, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                        fileCp += line.getCps();}, Line{lineNo=132, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=133, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=134, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=135, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFile.setCp(fileCp);}, Line{lineNo=136, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                projectFile.setLinesData(lines);}, Line{lineNo=137, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=138, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                projectFiles.add(projectFile);}, Line{lineNo=139, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                RecursiveMethodLineNumberFinder.resetData();}, Line{lineNo=140, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                Ci.resetCi(); //reset ci value after file ends}, Line{lineNo=141, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                Ctc.setSwitchCtc(); //add switch ctc value}, Line{lineNo=142, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=143, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=            } catch (IOException e) {}, Line{lineNo=144, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=                LOGGER.error("Error reading file", e);}, Line{lineNo=145, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=146, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        });}, Line{lineNo=147, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=148, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1015}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\core\App.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.core;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.acc.FileHandler;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.utils.ErrorMessages;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.NoSuchElementException;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Optional;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class App {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(App.class);}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    static void execute(Project project) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=        LOGGER.info("Analyzing project " + project.getProjectKey() + "...");}, Line{lineNo=17, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        LOGGER.info("Found source path " + project.getSourcePath());}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        new FileHandler().readFiles(project);}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    /**}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * java -DprojectKey=ACC -DsourcePath=E:\Development\algorithemic-complexity-calculator -jar core-1.0-SNAPSHOT-jar-with-dependencies.jar}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     *}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     * @param args}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=     */}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        org.apache.log4j.PropertyConfigurator.configure("config/log4j.properties");}, Line{lineNo=31, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        LOGGER.debug("ACCScanner start analyzing...");}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> projectKey = Optional.ofNullable(System.getProperty("projectKey"));}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        Optional<String> sourcePath = Optional.ofNullable(System.getProperty("sourcePath"));}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=        Project project = new Project();}, Line{lineNo=37, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (projectKey.isPresent()) {}, Line{lineNo=38, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setProjectKey(projectKey.get());}, Line{lineNo=39, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=40, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=41, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.PK_NOT_FOUND_ERR);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=43, cs=3, ctc=1, cnc=1, ci=2, cps=12, tw=4, cr=0, data=        if (sourcePath.isPresent()) {}, Line{lineNo=44, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            project.setSourcePath(sourcePath.get());}, Line{lineNo=45, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=46, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=            LOGGER.error(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=47, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=            throw new NoSuchElementException(ErrorMessages.SP_NOT_FOUND_ERR);}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        execute(project);}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=268}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Line.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Line {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int lineNo;}, Line{lineNo=6, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String data;}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cs;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ctc;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cnc;}, Line{lineNo=10, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int ci;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cps;}, Line{lineNo=12, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int tw;}, Line{lineNo=13, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cr;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getData() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return data;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setData(String data) {}, Line{lineNo=20, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.data = data;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getLineNo() {}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return lineNo;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLineNo(int lineNo) {}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.lineNo = lineNo;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCs() {}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cs;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCs(int cs) {}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cs = cs;}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCtc() {}, Line{lineNo=40, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ctc;}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCtc(int ctc) {}, Line{lineNo=44, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ctc = ctc;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCnc() {}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cnc;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=51, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCnc(int cnc) {}, Line{lineNo=52, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cnc = cnc;}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=55, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCi() {}, Line{lineNo=56, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return ci;}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCi(int ci) {}, Line{lineNo=60, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.ci = ci;}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=63, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCps() {}, Line{lineNo=64, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cps;}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=67, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCps(int cps) {}, Line{lineNo=68, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cps = cps;}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=71, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getTw() {}, Line{lineNo=72, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return tw;}, Line{lineNo=73, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=74, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=75, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setTw(int tw) {}, Line{lineNo=76, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.tw = tw;}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCr() {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cr;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=83, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCr(int cr) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cr = cr;}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=88, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=89, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Line{" +}, Line{lineNo=90, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                "lineNo=" + lineNo +}, Line{lineNo=91, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cs=" + cs +}, Line{lineNo=92, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ctc=" + ctc +}, Line{lineNo=93, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cnc=" + cnc +}, Line{lineNo=94, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", ci=" + ci +}, Line{lineNo=95, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cps=" + cps +}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", tw=" + tw +}, Line{lineNo=97, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cr=" + cr +}, Line{lineNo=98, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", data=" + data +}, Line{lineNo=99, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=101, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=300}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Project.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Project {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String projectKey;}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String sourcePath;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String language;}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<ProjectFile> files;}, Line{lineNo=11, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<ProjectFile> getFiles() {}, Line{lineNo=14, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return files;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setFiles(List<ProjectFile> files) {}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.files = files;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getProjectKey() {}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return projectKey;}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setProjectKey(String projectKey) {}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.projectKey = projectKey;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getSourcePath() {}, Line{lineNo=30, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return sourcePath;}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setSourcePath(String sourcePath) {}, Line{lineNo=34, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.sourcePath = sourcePath;}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getLanguage() {}, Line{lineNo=38, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return language;}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setLanguage(String language) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.language = language;}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=45, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=46, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=49, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=50, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=54, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=55, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "Project{" +}, Line{lineNo=56, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "projectKey='" + projectKey + '\'' +}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", sourcePath='" + sourcePath + '\'' +}, Line{lineNo=58, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                ", language='" + language + '\'' +}, Line{lineNo=59, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", files=" + files +}, Line{lineNo=60, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=202}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\ProjectFile.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ProjectFile {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=7, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    String relativePath;}, Line{lineNo=8, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    List<Line> linesData;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    int cp;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setRelativePath(String relativePath) {}, Line{lineNo=12, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.relativePath = relativePath;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String getRelativePath() {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return relativePath;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public List<Line> getLinesData() {}, Line{lineNo=20, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return linesData;}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    public void setLinesData(List<Line> linesData) {}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.linesData = linesData;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int getCp() {}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return cp;}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void setCp(int cp) {}, Line{lineNo=32, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=        this.cp = cp;}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=    @Override}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public String toString() {}, Line{lineNo=37, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return "ProjectFile{" +}, Line{lineNo=38, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                "relativePath='" + relativePath + '\'' +}, Line{lineNo=39, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", linesData=" + linesData +}, Line{lineNo=40, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                ", cp=" + cp +}, Line{lineNo=41, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=                '}';}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=122}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\model\Stack.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.model;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Stack {}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private int top;}, Line{lineNo=9, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    private List<String> stackArr;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    public Stack() {}, Line{lineNo=12, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        top = -1;}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        stackArr = new ArrayList<String>();}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public void push(String val) {}, Line{lineNo=17, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top++;}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        stackArr.add(val);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=22, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public String pop() {}, Line{lineNo=23, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=        String result = stackArr.remove(top);}, Line{lineNo=24, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        top--;}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return result;}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public int peek() {}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=        return top + 1;}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=76}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\Client.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.Gson;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.google.gson.GsonBuilder;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.HttpResponse;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.HttpClient;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.client.methods.HttpPost;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.entity.StringEntity;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.http.impl.client.HttpClientBuilder;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class Client {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(Client.class);}, Line{lineNo=18, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String FAILED_TO_SUBMIT_DATA_TO_THE_SERVER = "Failed to submit data to the server ";}, Line{lineNo=19, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static String accUrl = PropertyReader.getInstance().getProperty("accUrl");}, Line{lineNo=20, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static HttpClient httpClient = HttpClientBuilder.create().build();}, Line{lineNo=21, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=    private static Gson gson = new GsonBuilder().disableHtmlEscaping().create();}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=23, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private Client() {}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    public static void sendAnalysisData(Project project) {}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.debug("Submitting analysis data to the server...");}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=31, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            HttpPost request = new HttpPost(accUrl);}, Line{lineNo=32, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            request.addHeader("content-type", "application/json");}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            String json = gson.toJson(project); // convert}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            LOGGER.info(json);}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            StringEntity params = new StringEntity(json);}, Line{lineNo=38, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            request.setEntity(params);}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=40, cs=9, ctc=1, cnc=0, ci=2, cps=27, tw=3, cr=0, data=            if (project.getFiles().size() > 0) {}, Line{lineNo=41, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                HttpResponse response = httpClient.execute(request);}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=43, cs=8, ctc=1, cnc=0, ci=2, cps=24, tw=3, cr=0, data=                if (response.getStatusLine().getStatusCode() == 200) {}, Line{lineNo=44, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    LOGGER.info("Analysis data submitted to the server " + response.getStatusLine());}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=46, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER + response.getStatusLine());}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            } else {}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                LOGGER.error("Nothing to Submit");}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=            LOGGER.error(FAILED_TO_SUBMIT_DATA_TO_THE_SERVER);}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=55, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=256}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\ErrorMessages.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class ErrorMessages {}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String PK_NOT_FOUND_ERR = "projectKey property not found";}, Line{lineNo=6, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    public static final String SP_NOT_FOUND_ERR = "sourcePath property not found";}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=8, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private ErrorMessages() {}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=14}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\MethodAndVariableFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Iterator;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MethodAndVariableFinder {}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(MethodAndVariableFinder.class);}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=14, ctc=0, cnc=0, ci=2, cps=28, tw=2, cr=0, data=    private static List<String> keywordsOne = Arrays.asList(PropertyReader.getInstance().getProperty("cs.one").split(","));}, Line{lineNo=21, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=22, cs=19, ctc=0, cnc=0, ci=2, cps=38, tw=2, cr=0, data=    private static Pattern variable = Pattern.compile("\"[^\"]*\"|((?=_[a-z_0-9]|[a-z])([a-z_0-9]|[a-z0-9\\[\\]])+(?=\\s*=))");}, Line{lineNo=23, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern param = Pattern.compile("\\((.*?)\\)");}, Line{lineNo=24, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=    private static Pattern newPattern = Pattern.compile("(new)+\\s\\w+");}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static Pattern methodCalls = Pattern.compile("([^\\W:.,()\\s]+)\\s*\\(|::([^W:.,()\\s]+)");}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    public static List<String> getMethodAndVariables(File file) {}, Line{lineNo=28, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=        List<String> list = new ArrayList<>();}, Line{lineNo=29, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=30, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=            lnr.lines().parallel().forEach(line -> {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method finder}, Line{lineNo=33, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher m = method.matcher(line);}, Line{lineNo=34, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (m.find()) {}, Line{lineNo=35, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = m.group(2);}, Line{lineNo=36, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=37, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // method call finder}, Line{lineNo=42, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                Matcher mc = methodCalls.matcher(line);}, Line{lineNo=43, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (mc.find()) {}, Line{lineNo=44, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                    String name = mc.group(0).trim().replaceAll("[\\s\\(]", "");}, Line{lineNo=45, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (!list.contains(name)) {}, Line{lineNo=46, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                        list.add(name);}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=48, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // parameter finder example(String a)}, Line{lineNo=51, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher p = param.matcher(line);}, Line{lineNo=52, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (p.find()) {}, Line{lineNo=53, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = p.group(1);}, Line{lineNo=54, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> paramList = Arrays.asList(params.split(","));}, Line{lineNo=55, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                    paramList.forEach(param -> {}, Line{lineNo=56, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=                        List<String> single = Arrays.asList(param.trim().split(" "));}, Line{lineNo=57, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                        if (single.size() == 2) {}, Line{lineNo=58, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                            String param1 = single.get(0).replaceAll("[\\[\\]]", "");}, Line{lineNo=59, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                            if (!list.contains(param1)) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                                list.add(param1);}, Line{lineNo=61, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=62, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=                            String param2 = single.get(1).replaceAll("[\\[\\]]", "");}, Line{lineNo=63, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                            if (!list.contains(param2)) {}, Line{lineNo=64, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=                                list.add(param2);}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                            }}, Line{lineNo=66, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=67, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=                    });}, Line{lineNo=68, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=69, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=70, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // Object creations finder}, Line{lineNo=71, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ex: new FileReader()}, Line{lineNo=72, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                Matcher np = newPattern.matcher(line);}, Line{lineNo=73, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (np.find()) {}, Line{lineNo=74, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String params = np.group(0);}, Line{lineNo=75, cs=11, ctc=0, cnc=1, ci=2, cps=33, tw=3, cr=0, data=                    List<String> single = Arrays.asList(params.split(" "));}, Line{lineNo=76, cs=6, ctc=1, cnc=1, ci=2, cps=24, tw=4, cr=0, data=                    if (single.size() == 2) {}, Line{lineNo=77, cs=6, ctc=0, cnc=1, ci=2, cps=18, tw=3, cr=0, data=                        String paramName = single.get(1);}, Line{lineNo=78, cs=5, ctc=1, cnc=1, ci=2, cps=20, tw=4, cr=0, data=                        if (!list.contains(paramName)) {}, Line{lineNo=79, cs=3, ctc=0, cnc=1, ci=2, cps=9, tw=3, cr=0, data=                            list.add(paramName);}, Line{lineNo=80, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=83, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=84, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //variable finder}, Line{lineNo=85, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                Matcher v = variable.matcher(line);}, Line{lineNo=86, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                while (v.find()) {}, Line{lineNo=87, cs=7, ctc=0, cnc=1, ci=2, cps=21, tw=3, cr=0, data=                    String name = v.group(1);}, Line{lineNo=88, cs=12, ctc=2, cnc=1, ci=2, cps=60, tw=5, cr=0, data=                    if (name != null && !list.contains(name)) {}, Line{lineNo=89, cs=12, ctc=0, cnc=1, ci=2, cps=36, tw=3, cr=0, data=                        list.add(name.replace("[", "").replace("]", ""));}, Line{lineNo=90, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=91, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=92, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=93, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=                for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) {}, Line{lineNo=94, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=                    String value = iterator.next();}, Line{lineNo=95, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                    if (keywordsOne.contains(value.toLowerCase())) {}, Line{lineNo=96, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=                        iterator.remove();}, Line{lineNo=97, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=98, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=99, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=100, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=            });}, Line{lineNo=101, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=102, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=103, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=104, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return list;}, Line{lineNo=105, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=106, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=107, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=1085}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\PropertyReader.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Map;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Properties;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class PropertyReader {}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(PropertyReader.class);}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static PropertyReader propertyReader = null;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=    private Map<String, String> properties = new HashMap<>();}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=    private PropertyReader() {}, Line{lineNo=20, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=        try (FileReader reader = new FileReader("config/application.properties")) {}, Line{lineNo=21, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            Properties p = new Properties();}, Line{lineNo=22, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            p.load(reader);}, Line{lineNo=23, cs=21, ctc=0, cnc=0, ci=2, cps=42, tw=2, cr=0, data=            p.entrySet().forEach(entry -> properties.put(entry.getKey().toString(), entry.getValue().toString()));}, Line{lineNo=24, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=25, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading property file", e);}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static PropertyReader getInstance() {}, Line{lineNo=30, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        if (propertyReader == null)}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=            propertyReader = new PropertyReader();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=        return propertyReader;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=35, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=36, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public String getProperty(String key) {}, Line{lineNo=37, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=        return properties.get(key);}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=178}, ProjectFile{relativePath='\src\main\java\com\sliit\spm\utils\RecursiveMethodLineNumberFinder.java', linesData=[Line{lineNo=1, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.utils;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.apache.log4j.Logger;}, Line{lineNo=4, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.File;}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.FileReader;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.IOException;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.LineNumberReader;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.HashMap;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Matcher;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.regex.Pattern;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class RecursiveMethodLineNumberFinder {}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    private static final Logger LOGGER = Logger.getLogger(RecursiveMethodLineNumberFinder.class);}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=19, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    private static Pattern method = Pattern.compile("(public|protected|private|static|\\s) +[\\w\\<\\>\\[\\]]+\\s+(\\w+) *\\([^\\)]*\\) *(\\{?|[^;])");}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=21, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static String tempMethodNameHolder = "";}, Line{lineNo=22, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer methodNameLineNumber = 0;}, Line{lineNo=23, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=    private static Integer recursiveMethodCallLineNumber = 0;}, Line{lineNo=24, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=25, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=    private static HashMap<Integer, Integer> recursionLineNumbers = new HashMap<>();}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=    public static HashMap<Integer, Integer> getRecursiveMethodLineNumbers(File file) {}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        //Add code to ignore comments}, Line{lineNo=30, cs=12, ctc=0, cnc=0, ci=2, cps=24, tw=2, cr=0, data=        try (LineNumberReader lnr = new LineNumberReader(new FileReader(file))) {}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean singleLineCommented = false;}, Line{lineNo=33, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            boolean multiLineCommented = false;}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=35, cs=10, ctc=2, cnc=0, ci=2, cps=40, tw=4, cr=0, data=            for (String line; (line = lnr.readLine()) != null; ) {}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                // ignore comment lines}, Line{lineNo=38, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("//") || line.trim().startsWith("import") || line.trim().startsWith("include")) {}, Line{lineNo=39, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = true;}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                } else {}, Line{lineNo=41, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    singleLineCommented = false;}, Line{lineNo=42, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=43, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("/*")) {}, Line{lineNo=44, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = true;}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=46, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().startsWith("*/")) {}, Line{lineNo=47, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    line = line.replaceFirst("\\*/", "");}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=49, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=50, cs=5, ctc=1, cnc=0, ci=2, cps=15, tw=3, cr=0, data=                if (line.contains("//")) {}, Line{lineNo=51, cs=13, ctc=0, cnc=0, ci=2, cps=26, tw=2, cr=0, data=                    line = line.replace(line.substring(line.indexOf("//")), "");}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=53, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=54, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                //Gets the name of the function}, Line{lineNo=55, cs=6, ctc=2, cnc=0, ci=2, cps=24, tw=4, cr=0, data=                if (!singleLineCommented && !multiLineCommented) {}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    // method finder}, Line{lineNo=57, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=                    Matcher m = method.matcher(line);}, Line{lineNo=58, cs=4, ctc=2, cnc=1, ci=2, cps=20, tw=5, cr=0, data=                    while (m.find()) {}, Line{lineNo=59, cs=8, ctc=1, cnc=1, ci=2, cps=32, tw=4, cr=0, data=                        if (!tempMethodNameHolder.equals(m.group(2))) {}, Line{lineNo=60, cs=5, ctc=0, cnc=1, ci=2, cps=15, tw=3, cr=0, data=                            tempMethodNameHolder = m.group(2);}, Line{lineNo=61, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            methodNameLineNumber = lnr.getLineNumber();}, Line{lineNo=62, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    //Checks if there is a return statement and if it returns the same function}, Line{lineNo=66, cs=7, ctc=1, cnc=1, ci=2, cps=28, tw=4, cr=0, data=                    if (line.trim().startsWith("return")) {}, Line{lineNo=67, cs=17, ctc=0, cnc=1, ci=2, cps=51, tw=3, cr=0, data=                        List<String> lineDataList = Arrays.asList(line.trim().replaceAll("[\\(]", " ").split(" "));}, Line{lineNo=68, cs=15, ctc=2, cnc=1, ci=2, cps=75, tw=5, cr=0, data=                        if (lineDataList.size() >= 2 && lineDataList.get(1).equals(tempMethodNameHolder)) {}, Line{lineNo=69, cs=4, ctc=0, cnc=1, ci=2, cps=12, tw=3, cr=0, data=                            recursiveMethodCallLineNumber = lnr.getLineNumber();}, Line{lineNo=70, cs=7, ctc=2, cnc=2, ci=2, cps=42, tw=6, cr=0, data=                            if (methodNameLineNumber > 0 && recursiveMethodCallLineNumber > methodNameLineNumber) {}, Line{lineNo=71, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursionLineNumbers.put(methodNameLineNumber, recursiveMethodCallLineNumber);}, Line{lineNo=72, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                methodNameLineNumber = 0;}, Line{lineNo=73, cs=2, ctc=0, cnc=2, ci=2, cps=8, tw=4, cr=0, data=                                recursiveMethodCallLineNumber = 0;}, Line{lineNo=74, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=                            }}, Line{lineNo=75, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                        }}, Line{lineNo=76, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                    }}, Line{lineNo=77, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=78, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=79, cs=7, ctc=1, cnc=0, ci=2, cps=21, tw=3, cr=0, data=                if (line.trim().endsWith("*/")) {}, Line{lineNo=80, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=                    multiLineCommented = false;}, Line{lineNo=81, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=                }}, Line{lineNo=82, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            }}, Line{lineNo=83, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (IOException e) {}, Line{lineNo=84, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=            LOGGER.error("Error reading file", e);}, Line{lineNo=85, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=86, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        return recursionLineNumbers;}, Line{lineNo=87, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=88, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=89, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=    public static void resetData() {}, Line{lineNo=90, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursionLineNumbers.clear();}, Line{lineNo=91, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        tempMethodNameHolder = "";}, Line{lineNo=92, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        methodNameLineNumber = 0;}, Line{lineNo=93, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=        recursiveMethodCallLineNumber = 0;}, Line{lineNo=94, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=95, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=669}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CsTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Before;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.ArrayList;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.List;}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=22, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=24, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=25, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CsTest {}, Line{lineNo=26, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=27, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private String lineData;}, Line{lineNo=28, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=29, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	private Line line;}, Line{lineNo=30, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=	private List<String> methodsAndVariables = new ArrayList<>();}, Line{lineNo=31, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=32, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	@Before}, Line{lineNo=33, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	public void before(){}, Line{lineNo=34, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("count");}, Line{lineNo=35, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("fibonacci");}, Line{lineNo=36, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("number");}, Line{lineNo=37, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("main");}, Line{lineNo=38, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		methodsAndVariables.add("args");}, Line{lineNo=39, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=40, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CsTest(String line, int expectedValue) {}, Line{lineNo=42, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.lineData = line;}, Line{lineNo=43, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		this.expectedResult = expectedValue;}, Line{lineNo=44, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=		this.line = new Line();}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=47, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=48, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=49, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=50, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=51, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static long fibonacci(long number) {", 4 },}, Line{lineNo=52, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 8 },}, Line{lineNo=53, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "return number;", 1 },}, Line{lineNo=54, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "public static void main(String args[ ]) {", 4 },}, Line{lineNo=55, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int count = 0; count <= 10; count++){", 10 }}, Line{lineNo=56, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=57, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=58, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=59, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=60, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCs() {}, Line{lineNo=61, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=		Cs.calcCs(line, lineData,methodsAndVariables);}, Line{lineNo=62, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		assertEquals(expectedResult, line.getCs());}, Line{lineNo=63, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=64, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=65, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=164}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\CtcTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * }, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Line;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Vimukthi Rajapaksha}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class CtcTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=	private String line;}, Line{lineNo=25, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private int expectedResult;}, Line{lineNo=26, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	private Line lineObj;}, Line{lineNo=27, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=28, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=	public CtcTest(String line, int expectedResult) {}, Line{lineNo=29, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		this.line = line;}, Line{lineNo=30, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		this.expectedResult = expectedResult;}, Line{lineNo=31, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=		lineObj = new Line();}, Line{lineNo=32, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=33, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=34, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Parameters}, Line{lineNo=35, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=	public static Collection<?> params() {}, Line{lineNo=36, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=		return Arrays.asList(new Object[][] { }, Line{lineNo=37, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=			{ "", 0 }, }, Line{lineNo=38, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "if(true) {", 1 },}, Line{lineNo=39, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "if((number == 0) || (number == 1)) {", 2 },}, Line{lineNo=40, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "for (int i = 0; i < array.length; i++) {", 2 },}, Line{lineNo=41, cs=2, ctc=2, cnc=0, ci=2, cps=8, tw=4, cr=0, data=			{ "while (100 > 5) {", 2 },}, Line{lineNo=42, cs=2, ctc=1, cnc=0, ci=2, cps=6, tw=3, cr=0, data=			{ "} catch (Exception e) {", 1 } }, Line{lineNo=43, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=		});}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=	@Test}, Line{lineNo=47, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=	public void testCalcCtc() {}, Line{lineNo=48, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=		Ctc.calcCtc(lineObj, line);}, Line{lineNo=49, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=		assertEquals(expectedResult, lineObj.getCtc());}, Line{lineNo=50, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=	}}, Line{lineNo=51, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=52, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=124}, ProjectFile{relativePath='\src\test\java\com\sliit\spm\acc\FileHandlerTest.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= *}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=4, cs=3, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=package com.sliit.spm.acc;}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import com.sliit.spm.model.Project;}, Line{lineNo=7, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.Test;}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runner.RunWith;}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized;}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import org.junit.runners.Parameterized.Parameters;}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Arrays;}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.util.Collection;}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import static org.junit.Assert.assertEquals;}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=17, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=/**}, Line{lineNo=18, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @author Tenusha Guruge}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= * @date Aug 12, 2019}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data= */}, Line{lineNo=21, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=@RunWith(Parameterized.class)}, Line{lineNo=22, cs=1, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FileHandlerTest {}, Line{lineNo=23, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=24, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   private Project project;}, Line{lineNo=25, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=26, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=   public FileHandlerTest(Project p) {}, Line{lineNo=27, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      this.project = p;}, Line{lineNo=28, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=29, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=30, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Parameters}, Line{lineNo=31, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=   public static Collection<?> params() {}, Line{lineNo=32, cs=10, ctc=0, cnc=0, ci=2, cps=20, tw=2, cr=0, data=      Project project = new Project();}, Line{lineNo=33, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setSourcePath("TestData");}, Line{lineNo=34, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=      project.setProjectKey("TestData");}, Line{lineNo=35, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      return Arrays.asList(new Object[]{project});}, Line{lineNo=36, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=37, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=38, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=   @Test}, Line{lineNo=39, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=   public void testReadFiles() {}, Line{lineNo=40, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=      new FileHandler().readFiles(project);}, Line{lineNo=41, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=      int expected = 2;}, Line{lineNo=42, cs=9, ctc=0, cnc=0, ci=2, cps=18, tw=2, cr=0, data=      int actual = project.getFiles().size();}, Line{lineNo=43, cs=2, ctc=0, cnc=0, ci=2, cps=4, tw=2, cr=0, data=      assertEquals(expected, actual);}, Line{lineNo=44, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=   }}, Line{lineNo=45, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=46, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=136}, ProjectFile{relativePath='\TestData\FibonacciMain.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class FibonacciMain {}, Line{lineNo=2, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=16, data=    public static long fibonacci(long number) {}, Line{lineNo=3, cs=8, ctc=2, cnc=1, ci=2, cps=40, tw=5, cr=80, data=        if ((number == 0) || (number == 1)) {}, Line{lineNo=4, cs=1, ctc=0, cnc=1, ci=2, cps=3, tw=3, cr=6, data=            return number;}, Line{lineNo=5, cs=0, ctc=0, cnc=1, ci=0, cps=0, tw=1, cr=0, data=        } else {}, Line{lineNo=6, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=            // recursion step}, Line{lineNo=7, cs=9, ctc=0, cnc=1, ci=2, cps=27, tw=3, cr=54, data=            return fibonacci(number - 1) + fibonacci(number - 2);}, Line{lineNo=8, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=9, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=10, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=11, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String args[]) {}, Line{lineNo=12, cs=10, ctc=2, cnc=1, ci=2, cps=50, tw=5, cr=0, data=        for (int count = 0; count <= 10; count++) {}, Line{lineNo=13, cs=13, ctc=0, cnc=1, ci=2, cps=39, tw=3, cr=0, data=            System.out.println("Fibonacci of " + count + " is " + fibonacci(count));}, Line{lineNo=14, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=16, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}   }], cp=253}, ProjectFile{relativePath='\TestData\MyException.java', linesData=[Line{lineNo=1, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=import java.io.*;}, Line{lineNo=2, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=3, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=public class MyException {}, Line{lineNo=4, cs=5, ctc=0, cnc=0, ci=2, cps=10, tw=2, cr=0, data=    static void accessFiles() throws FileNotFoundException {}, Line{lineNo=5, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=6, cs=7, ctc=0, cnc=0, ci=2, cps=14, tw=2, cr=0, data=            FileReader f = new FileReader("D:\\Exceptions.doc");}, Line{lineNo=7, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File found");}, Line{lineNo=8, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=9, cs=8, ctc=0, cnc=0, ci=2, cps=16, tw=2, cr=0, data=            System.out.println(e.getMessage(asa));}, Line{lineNo=10, cs=3, ctc=0, cnc=0, ci=2, cps=6, tw=2, cr=0, data=            throw e; // Rethrows the exception}, Line{lineNo=11, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=12, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=13, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}, Line{lineNo=14, cs=4, ctc=0, cnc=0, ci=2, cps=8, tw=2, cr=0, data=    public static void main(String[] args) {}, Line{lineNo=15, cs=0, ctc=0, cnc=0, ci=2, cps=0, tw=2, cr=0, data=        try {}, Line{lineNo=16, cs=1, ctc=0, cnc=0, ci=2, cps=2, tw=2, cr=0, data=            accessFiles();}, Line{lineNo=17, cs=3, ctc=1, cnc=0, ci=2, cps=9, tw=3, cr=0, data=        } catch (FileNotFoundException e) {}, Line{lineNo=18, cs=6, ctc=0, cnc=0, ci=2, cps=12, tw=2, cr=0, data=            System.out.println("File cannot be found!");}, Line{lineNo=19, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=        }}, Line{lineNo=20, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=    }}, Line{lineNo=21, cs=0, ctc=0, cnc=0, ci=0, cps=0, tw=0, cr=0, data=}}], cp=98}]}}],[]>
2020-05-08 18:08:10.965  INFO 23228 --- [main] com.sliit.spm.AccApplication             : Starting AccApplication on DESKTOP-6IHH9AS with PID 23228 (started by PRABHA in E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACC)
2020-05-08 18:08:10.996  INFO 23228 --- [main] com.sliit.spm.AccApplication             : No active profile set, falling back to default profiles: default
2020-05-08 18:08:16.346  INFO 23228 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2020-05-08 18:08:16.550  INFO 23228 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 177ms. Found 2 repository interfaces.
2020-05-08 18:08:21.989  INFO 23228 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2020-05-08 18:08:22.620  INFO 23228 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-05-08 18:08:22.621  INFO 23228 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.21]
2020-05-08 18:08:22.681  INFO 23228 --- [main] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.16] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.21]
2020-05-08 18:08:22.681  INFO 23228 --- [main] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.16] using APR version [1.6.3].
2020-05-08 18:08:22.681  INFO 23228 --- [main] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-08 18:08:22.681  INFO 23228 --- [main] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-08 18:08:24.113  INFO 23228 --- [main] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2m  2 Nov 2017]
2020-05-08 18:08:24.400  INFO 23228 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-05-08 18:08:24.400  INFO 23228 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 13120 ms
2020-05-08 18:08:26.216  INFO 23228 --- [main] org.mongodb.driver.cluster               : Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-05-08 18:08:26.504  INFO 23228 --- [cluster-ClusterId{value='5eb552c21b01485abccc3400', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:1, serverValue:5}] to localhost:27017
2020-05-08 18:08:26.569  INFO 23228 --- [cluster-ClusterId{value='5eb552c21b01485abccc3400', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 3]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=60650718}
2020-05-08 18:08:27.576  INFO 23228 --- [main] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:6}] to localhost:27017
2020-05-08 18:08:30.136  INFO 23228 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-05-08 18:08:30.488  INFO 23228 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2020-05-08 18:08:30.565  INFO 23228 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2020-05-08 18:08:30.578  INFO 23228 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2020-05-08 18:08:31.153  INFO 23228 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8090 (http) with context path ''
2020-05-08 18:08:31.203  INFO 23228 --- [main] com.sliit.spm.AccApplication             : Started AccApplication in 21.955 seconds (JVM running for 26.453)
2020-05-08 18:09:43.260  INFO 23228 --- [http-nio-8090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-08 18:09:43.260  INFO 23228 --- [http-nio-8090-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-05-08 18:09:43.374  INFO 23228 --- [http-nio-8090-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 113 ms
2020-05-08 18:39:55.020  INFO 18980 --- [main] com.sliit.spm.AccApplication             : Starting AccApplication on DESKTOP-6IHH9AS with PID 18980 (started by PRABHA in E:\Projects\FreeLance\Code complexity measuring tool\algorithemic-complexity-calculator-master\ACC)
2020-05-08 18:39:55.023  INFO 18980 --- [main] com.sliit.spm.AccApplication             : No active profile set, falling back to default profiles: default
2020-05-08 18:39:56.612  INFO 18980 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2020-05-08 18:39:56.721  INFO 18980 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 105ms. Found 2 repository interfaces.
2020-05-08 18:39:57.983  INFO 18980 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8090 (http)
2020-05-08 18:39:58.021  INFO 18980 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-05-08 18:39:58.022  INFO 18980 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.21]
2020-05-08 18:39:58.029  INFO 18980 --- [main] o.a.catalina.core.AprLifecycleListener   : An older version [1.2.16] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.21]
2020-05-08 18:39:58.030  INFO 18980 --- [main] o.a.catalina.core.AprLifecycleListener   : Loaded APR based Apache Tomcat Native library [1.2.16] using APR version [1.6.3].
2020-05-08 18:39:58.030  INFO 18980 --- [main] o.a.catalina.core.AprLifecycleListener   : APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2020-05-08 18:39:58.030  INFO 18980 --- [main] o.a.catalina.core.AprLifecycleListener   : APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2020-05-08 18:39:59.220  INFO 18980 --- [main] o.a.catalina.core.AprLifecycleListener   : OpenSSL successfully initialized [OpenSSL 1.0.2m  2 Nov 2017]
2020-05-08 18:39:59.453  INFO 18980 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-05-08 18:39:59.454  INFO 18980 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4372 ms
2020-05-08 18:40:00.508  INFO 18980 --- [main] org.mongodb.driver.cluster               : Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-05-08 18:40:00.588  INFO 18980 --- [cluster-ClusterId{value='5eb55a281b01484a24a09276', description='null'}-localhost:27017] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:1, serverValue:7}] to localhost:27017
2020-05-08 18:40:00.594  INFO 18980 --- [cluster-ClusterId{value='5eb55a281b01484a24a09276', description='null'}-localhost:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 6, 3]}, minWireVersion=0, maxWireVersion=6, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=3041709}
2020-05-08 18:40:00.891  INFO 18980 --- [main] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:2, serverValue:8}] to localhost:27017
2020-05-08 18:40:02.315  INFO 18980 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-05-08 18:40:02.612  INFO 18980 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2020-05-08 18:40:02.625  INFO 18980 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2020-05-08 18:40:02.643  INFO 18980 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2020-05-08 18:40:02.924  INFO 18980 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8090 (http) with context path ''
2020-05-08 18:40:02.955  INFO 18980 --- [main] com.sliit.spm.AccApplication             : Started AccApplication in 8.505 seconds (JVM running for 10.957)
2020-05-08 18:41:11.382  INFO 18980 --- [http-nio-8090-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-08 18:41:11.383  INFO 18980 --- [http-nio-8090-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-05-08 18:41:11.398  INFO 18980 --- [http-nio-8090-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2020-05-08 18:41:52.284  INFO 18980 --- [http-nio-8090-exec-8] org.mongodb.driver.connection            : Opened connection [connectionId{localValue:3, serverValue:9}] to localhost:27017
